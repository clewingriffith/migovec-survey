<?xml version="1.0"?>
<project name="migovec-survey" default="dist" xmlns:mig="http://migovec-survey.appspot.com" >

	<property name="build.dir" location="build" />
	<property name="dist.dir" location="dist" />
	<property name="src.dir" location="src" />
	<property name="zoom.levels" value="5" />

	<target name="build" description="rebuild any generated files eg. the tiles" depends="generate-tiles">
	</target>

	<target name="dist" description="copy all artifacts to the dist folder" >
		<copy todir="dist/migovec-survey">
		<resources>
		<fileset dir="src">
		  <include name="**/app.yaml" />
		  <include name="**/*.py" />
		  <include name="static/*.html" />
		  <include name="static/*.js" />
		</fileset>
		</resources>
		</copy>
		<copy todir="dist/migovec-survey/static/survey">
		<fileset dir="build/tiles">
		
		</fileset>
		</copy>
	</target>
	
	<target name="clean" description="Deletes all non-src files generated by the build.">
		<delete dir="${build.dir}" />
		<delete dir="${dist.dir}"  />
	</target>
	
	<target name="deploy" 
      description="Uploads the application to App Engine.">
	<appcfg action="update" war="war" />
	</target>


	
	<target name="copy-full-surveys">
		<copy todir="${build.dir}/tiles">
			<fileset dir="${src.dir}/survey" includes="**/full.png" />
		</copy>
	</target>
	
	<target name="create-zoom-levels" depends="copy-full-surveys">
		<script language="javascript">
<![CDATA[
			var zoomLevels = project.getProperty("zoom.levels");
			for(var i=0; i<=zoomLevels; i++) {
				self.log("creating zoom level " + i);
				var gen = project.createTask("generate-scaled-image");
				var zoomLevel = i;
				var pixelSize = (256 * (1<<zoomLevel));
				self.log("pixel size = " + pixelSize);
				gen.setDynamicAttribute("zoomlevel", zoomLevel);
				gen.setDynamicAttribute("pixelsize", pixelSize);
				gen.execute();
			}
]]>
		</script>
	</target>
	
	
	<macrodef name="generate-scaled-image">
		<attribute name="zoomlevel"/>
		<attribute name="pixelsize"/> <!-- eg. 1024  for a 1024x1024 resize -->
		<sequential>     
			<echo>   generate-scaled-image @{zoomlevel}</echo>
			<touch mkdirs="true">
				<fileset dir="${build.dir}/tiles" includes="**/*.png" />
				<mapper type="regexp" from="(.*)/full.png" to="${build.dir}/tiles/\1/zoom/@{zoomlevel}/scaled.png" />
			</touch>
			<delete>
				<fileset dir="${build.dir}/tiles" includes="**/@{zoomlevel}/scaled.png" />
			</delete>
			<apply executable="convert">
				<fileset dir="${build.dir}/tiles" includes="**/*.png" />
				<srcfile />
				<arg value="-resize" />
				<arg value="@{pixelsize}x@{pixelsize}" />
				<arg value="-background" />
				<arg value="white" />
				<arg value="-gravity" />
				<arg value="center" />
				<arg value="-extent" />
				<arg value="@{pixelsize}x@{pixelsize}" />
				<arg value="-flatten" />
				<targetfile />
				<mapper type="regexp" from="(.*)/full.png" to="${build.dir}/tiles/\1/zoom/@{zoomlevel}/scaled.png" />
			</apply>
		</sequential>
	</macrodef>
	
	<target name="generate-tiles" depends="create-zoom-levels" description="generate the tiles for google maps">
		<apply executable="convert">
			<fileset dir="${build.dir}/tiles" includes="**/scaled.png" />
			<srcfile />
			<arg value="-crop" />
			<arg value="256x256" />
			<targetfile />
			<mapper type="regexp" from="(.*)/scaled.png" to="${build.dir}/tiles/\1/t_%d.png" />
		</apply>
	</target>

	
</project>
